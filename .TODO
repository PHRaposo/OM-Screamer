TODO 

;===============================================================;
;=> PC-SET-THEORY
;===============================================================;



;===============================================================;
;===============================================================;
;=> SCREAMER-SOLVER
;===============================================================;

- FOR-EFFECTS? 
- FAIL-FORM? 
- FIX EFFICIENCY APPLY-CONTV (CAR-CDR / GROWING / ASSERT!-FUNCALLV RECURSIVE FUNCTIONS)
 
;===============================================================;   
;=> SCREAMER-SCORE
;===============================================================;

- SCREAMER-SCORE-2 (TESTS)

- SBCL (PLAIN LISP VERSION - ASDF)

- TESTS ANY-FN -> ANY-FN-RETURN-VARIABLE (NEW FUNCTION BASED ON SCREAMER+)

- NEW EXAMPLE PATCH AND BULIT-IN FUNCTIONS (FUX COUNTERPOINT - 1ST SPECIES)

- TEST ON WINDOWS - LINUX (COMPILE FILES)

- COMPILE-PATCH WITH CONSTRAINT-FN (INVESTIGATE)
   - NEW GLOBAL VARIABLE *om-screamer-score?* (if true compile patch differently with screamer functions)

- CONSTRAINT-HARMONY DOMAIN OPTIONS (PITCH - PITCH/DUR - PITCH/ONSET - PITCH-DUR-ONSET)

- HEURISTICS?

- BACKTRACK-CONSTRAINTS
  - SCORE-APPLY-CONT
  - NEW KEY FOR CONSTRAINTS (&key backtrack? -> t or nil)
  - MODIFICATIONS IN SCREAMER-SCORE (score-apply-cont inside for-effects)
  - APPLY-CONT-BACKTRACK

=> RECURSIVE FUNCTIONS WITH (SCREAMER::FAIL) <=
 - appc-rec
 - funcall-rec-car-cdr
 - appc-rec-growing

- PROFILE-CONSTRAINT-BACKTRACK

- PERCENTAGE-CONSTRAINT-BACKTRACK

- DEBUG-TOOLS (NEW-FILE?)

- TEST BACKTRACK IN SCREAMER-SCORE
- TEST NEW-PATCHES
- RHYTHMIC FUNCTIONS

- TUTORIALS 
   - PC-SET-THEORY (SCs - CONSTRAINTS)
   -(EXPLANATIONS ABOUT SCREAMER, VARIABLES, SCREAMER-SOLVER,
SCREAMER SCORE (MAIN FUNCTION, HOW TO BUILD CONSTRAINTS (ONE-VOICE, HARMONY, PROFILE, PERCENTAGE), ADD AN EXPLANATORY TEXT FOR EACH EXAMPLE PATCH. 











