; OM File Header - Saved 2025/09/22 13:46:36
; (7.06 :patc (om-make-point 57 46) (om-make-point 50 50) (om-make-point 888 544) "" 183 0 nil "2025/09/22 13:46:36")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "00-READ-ME-FIRST" (quote ((let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 696 379) (om-make-point 179 48) "https://github.com/phraposo/phr-constraints" "\"https://github.com/phraposo/phr-constraints\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "OPEN-URL" (quote system:open-url) (quote ((om-load-inputfun (quote input-funbox) "URL" "URL" nil))) (om-make-point 756 452) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 536 448) (quote "The OM-SCREAMER library is part of a bigger project and$started with the reconstruction of the OM-BACKTRACK library.$$The main goal is to bring to visual programming language the$nondeterministic features of SCREAMER, specially it's macros. $After some developments, which resulted in the OM-BACKTRACK$2.0, the next step was to implement the constraint package of$SCREAMER, which includes it's constraint package.$$This part was implemented in two main methods in Openmusic:$SCREAMER-SOLVER (a generic contraint solver) and$SCREAMER-SCORE (specialized for music constraints). The latter $was inspired by the work of Mikael Laurson (SCORE-PMC for PatchWork), $Orjan Sandred (Cluster-Engine for PWGL), Jacopo Baboni Schilingi$(JBS-Constraints for PWGL), Julien Vincenot (JV-Components for$PWGL and MoZLib for Max) and Torsten Anders (Arno, Cluster-Rules and$all of his academic research on this field).$$We also included in OM-Screamer an adaptation of the PC-SET-THEORY$(by Mikael Laurson) from PW-Constraints to SCREAMER (it is also included $in OMCS library for OM), all relevant functions/macros from SCREAMER and$SCREAMER-PLUS (by Simon White). $$It is advisable, in order to follow all the tutorials presented here, to read the $tutorials of OM-Backtrack and to install the PHR-CONSTRAINTS library, which $includes some useful methods and built-in constraints ready to use with this $library (available at https://github.com/phraposo). ===================>   $$Special thanks to Karim Haddad (IRCAM) for his great support.  $$Paulo Henrique Raposo") "" (om-make-point 65 15) nil (om-make-color 0 0 0) (om-make-font "Verdana" 13.999999999999999D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((0 0 1 0 nil 0))) nil 7.06))
