; OM File Header - Saved 2024/12/30 11:00:37
; (7.05 :patc (om-make-point 277 159) (om-make-point 50 50) (om-make-point 622 579) "" 183 0 nil "2024/12/30 11:00:32")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-Screamer")))(setf *om-current-persistent* (om-load-patch1 "00f-ordering-force-functions" (quote ((let ((box (om-load-boxcall (quote genfun) "RANDOM-FORCE" (quote random-force) (quote ((om-load-inputfun (quote input-funbox) "variable" "VARIABLE" nil))) (om-make-point 441 168) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ORDER" (quote order) (quote ((om-load-inputfun (quote input-funbox) "symbol or string" "SYMB-FN" (quote >)))) (om-make-point 190 465) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "RANGE-SIZE" (quote range-size) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 279 303) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "DOMAIN-SIZE" (quote domain-size) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 174 302) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "DIVIDE-AND-CONQUER-FORCE" (quote divide-and-conquer-force) (quote ((om-load-inputfun (quote input-funbox) "variable" "VARIABLE" nil))) (om-make-point 271 166) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LINEAR-FORCE" (quote linear-force) (quote ((om-load-inputfun (quote input-funbox) "variable" "VARIABLE" nil))) (om-make-point 180 165) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REORDER" (quote reorder) (quote ((om-load-inputfun (quote input-funbox) "cost-function" "COST-FUNCTION" nil) (om-load-inputfun (quote input-funbox) "terminate?" "TERMINATE?" nil) (om-load-inputfun (quote input-funbox) "order" "ORDER" nil) (om-load-inputfun (quote input-funbox) "force-function" "FORCE-FUNCTION" nil))) (om-make-point 80 303) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "STATIC-ORDERING" (quote static-ordering) (quote ((om-load-inputfun (quote input-funbox) "force function" "FORCE-FUNCTION" nil))) (om-make-point 65 161) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 328 34) (quote "THIS TUTORIAL IS UNDER CONSTRUCTION.") "" (om-make-point 101 79) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) nil 7.05))
